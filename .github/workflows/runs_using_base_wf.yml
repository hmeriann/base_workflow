name: This Workflow Uses base_workflow to Run
on:
  workflow_dispatch:

jobs:
  build-duckdb:
    name: Build 
    uses: hmeriann/.github/workflows/base_workflow.yml@main
    with:
      git_url: ${{ github.actor }}
      git_tag: ${{ github.head_ref }}
      
  fuzzer:
    name: Fuzzer
    needs:
    - build-duckdb
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        fuzzer: [duckfuzz, sqlsmith]
        data: [alltypes]

    steps:
      - name: checkout duckdb_sqlsmith
        uses: actions/checkout@v4
        with:
          repository: hmeriann/duckdb_sqlsmith
          path: duckdb_sqlsmith
          sparse-checkout: |
            scripts

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: duckdb
      
      - name: Fuzz
        shell: bash
        run: |
            chmod +x duckdb
            runtime="10 minute"
            endtime=$(date -ud "$runtime" +%s)
            cd duckdb_sqlsmith
            # mkdir -p clog
            while [[ $(date -u +%s) -le $endtime ]]
            do
                echo "Time Now: `date +%H:%M:%S`"
                python3 scripts/run_fuzzer.py --no_checks --${{ matrix.fuzzer }} --${{ matrix.data }} --dry --max_queries=1 --shell=../duckdb
            done

            # log_file="${{ matrix.fuzzer }}_${{ matrix.data }}.log"
            # mv sqlsmith.complete.log $log_file
            # echo ðŸš— ðŸš— ðŸš• 
            pwd
            # echo ðŸšŒ ðŸšŒ ðŸšŒ
            # ls -la
            
      - name: List directory contents
        if: always()
        run: ls -la

      - name: Upload fuzz_clogs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fuzz_logs_${{ matrix.fuzzer }}
          path: duckdb_sqlsmith/sqlsmith.complete.log
