name: CIF
on:
  workflow_dispatch:
  pull_request:

jobs:
  build-duckdb:
    name: Build 
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      # BUILD_ICU: 1
      # BUILD_JSON: 1
      # BUILD_TPCH: 1
      # BUILD_TPCDS: 1
      # BUILD_PARQUET: 1
      # BUILD_JEMALLOC: 1
      # CRASH_ON_ASSERT: 1
      GEN: ninja

    steps:
      # - name: Dependencies
      #   shell: bash
      #   run: sudo apt-get update -y -qq && sudo apt-get install -y -qq ninja-build ccache

      # - uses: actions/checkout@v4
      #   with:
      #     repository: hmeriann/duckdb
      #     fetch-depth: 0

      - name: create build sqlsmith extension file
        shell: bash
        run: |
          echo "duckdb_extension_load(sqlsmith 
            GIT_URL ${{ github.head_ref }} 
            GIT_TAG ${{ github.ref_name }}

            ðŸšŒ ðŸšŒ ðŸšŒ

            github	${{github}}
            github.action	${{github.action}}
            github.action_path	${{github.action_path}}
            github.action_ref	${{github.action_ref}}
            github.action_repository	${{github.action_repository}}
            github.action_status	${{github.action_status}}
            github.actor	${{github.actor}}
            github.actor_id	${{github.actor_id}}
            github.api_url	${{github.api_url}}
            github.base_ref	${{github.base_ref}}
            github.env	${{github.env}}
            github.event	${{github.event}}
            github.event_name	${{github.event_name}}
            github.event_path	${{github.event_path}}
            github.graphql_url	${{github.graphql_url}}
            github.head_ref	${{github.head_ref}}
            github.job	${{github.job}}
            github.path	${{github.path}}
            github.ref	${{github.ref}}
            github.ref_name	${{github.ref_name}}
            github.ref_protected	${{github.ref_protected}}
            github.ref_type	${{github.ref_type}}
            github.repository	${{github.repository}}
            github.repository_id	${{github.repository_id}}
            github.repository_owner	${{github.repository_owner}}
            github.repository_owner_id	${{github.repository_owner_id}}
            github.repositoryUrl	${{github.repositoryUrl}}
            github.retention_days	${{github.retention_days}}
            github.run_id	${{github.run_id}}
            github.run_number	${{github.run_number}}
            github.run_attempt	${{github.run_attempt}}
            github.secret_source	${{github.secret_source}}
            github.server_url	${{github.server_url}}
            github.sha	${{github.sha}}
            github.token	${{github.token}}
            github.triggering_actor	${{github.triggering_actor}}
            github.workflow	${{github.workflow}}
            github.workflow_ref	${{github.workflow_ref}}
            github.workflow_sha	${{github.workflow_sha}}
            github.workspace	${{github.workspace}}
          )" > sqlsmith.cmake

      - name: Build
        shell: bash
        run: |
          echo cat sqlsmith.cmake

      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: duckdb
      #     path: build/debug/duckdb

  # fuzzer:
  #   name: Fuzzer
  #   needs:
  #   - build-duckdb
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 120
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       fuzzer: [duckfuzz, sqlsmith]
  #       data: [alltypes]

    # steps:
      # - name: checkout duckdb_sqlsmith
      #   uses: actions/checkout@v4
      #   with:
      #     repository: hmeriann/duckdb_sqlsmith
      #     path: duckdb_sqlsmith
      #     sparse-checkout: |
      #       scripts

      # - name: Download a single artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: duckdb
      
      # - name: Fuzz
      #   shell: bash
      #   run: |
      #       chmod +x duckdb
      #       runtime="10 minute"
      #       endtime=$(date -ud "$runtime" +%s)
      #       cd duckdb_sqlsmith
      #       # mkdir -p clog
      #       while [[ $(date -u +%s) -le $endtime ]]
      #       do
      #           echo "Time Now: `date +%H:%M:%S`"
      #           python3 scripts/run_fuzzer.py --no_checks --${{ matrix.fuzzer }} --${{ matrix.data }} --dry --max_queries=1 --shell=../duckdb
      #       done

      #       # log_file="${{ matrix.fuzzer }}_${{ matrix.data }}.log"
      #       # mv sqlsmith.complete.log $log_file
      #       # echo ðŸš— ðŸš— ðŸš• 
      #       pwd
      #       # echo ðŸšŒ ðŸšŒ ðŸšŒ
      #       # ls -la
            
      # - name: List directory contents
      #   if: always()
      #   run: ls -la

      # - name: Upload fuzz_clogs
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: fuzz_logs_${{ matrix.fuzzer }}
      #     path: duckdb_sqlsmith/sqlsmith.complete.log
