name: Fuzz
on:
  workflow_call:
    inputs:
      fuzzer: 
        required: true
        type: string
      data:
        required: true
        type: string
      timeout-minutes:
        required: true
        type: number
        default: 120
      dry:
        required: true
        type: string

jobs:
  fuzzer:
    name: Fuzzer
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout-minutes }}
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     fuzzer: [duckfuzz, sqlsmith]
    #     data: [alltypes]
    steps:
      - name: checkout duckdb_sqlsmith
        uses: actions/checkout@v4
        with:
          repository: hmeriann/duckdb_sqlsmith
          path: duckdb_sqlsmith
          sparse-checkout: |
            scripts

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: duckdb

      - name: Fuzz
        shell: bash
        run: |
          chmod +x duckdb
          runtime="1 minute"
          endtime=$(date -ud "$runtime" +%s)
          cd duckdb_sqlsmith
      
          while [[ $(date -u +%s) -le $endtime ]]
          do
              echo "Time Now: `date +%H:%M:%S`"
              python3 scripts/run_fuzzer.py ${{ inputs.dry }} --no_checks --${{ inputs.fuzzer }} --${{ inputs.data }} --max_queries=1 --shell=../duckdb
          done
      - name: Rename Artifact
        run: mv duckdb_sqlsmith/sqlsmith.complete.log duckdb_sqlsmith/fuzz_complete_logs_${{ inputs.fuzzer }}_${{ inputs.data }}.sql
      - name: Upload fuzz_clogs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fuzz_logs_${{ inputs.fuzzer }}_${{ inputs.data }}
          path: duckdb_sqlsmith/fuzz_complete_logs_${{ inputs.fuzzer }}_${{ inputs.data }}.sql
          
